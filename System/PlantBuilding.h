#ifndef PLANTBUILDING_H
#define PLANTBUILDING_H

#include "Building.h"

/**
 * @brief A class representing utility plant buildings in the city
 * @details PlantBuilding is derived from the Building base class and implements
 *          functionality for utility structures such as power plants, water treatment
 *          facilities, and waste management plants
 */
class PlantBuilding : public Building
{
private:
    /** @brief The amount of waste produced by the plant building */
    int wasteProduction;

public:
    PlantBuilding(std::string name, int x, int y) : Building(name, x, y) {}

    /**
     * @brief Gets the cost consumption of the plant building
     * @return The cost consumption value as an integer
     */
    virtual int getCostConsumption() override;

    /**
     * @brief Gets the revenue generated by the plant building
     * @return The revenue value as an integer
     */
    virtual int getRevenue() override;

    /**
     * @brief Gets the sewage production of the plant building
     * @return The sewage production value as an integer
     */
    virtual int getSewageProduction() override;

    /**
     * @brief Gets the waste production of the plant building
     * @return The waste production value as an integer
     */
    virtual int getWasteProduction() override;
};

#endif